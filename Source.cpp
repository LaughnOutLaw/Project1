
/*___________________________________________________
____________________________________________________/

Домашняя работа - Julian AkA LaughnOutLaw.

____________________________________________________
__________________________________________________*/

#include <iostream>
#include <iomanip>
#include <Windows.h>


using namespace std;

/*_______________________________________________________________________________________________________________________

    TASK 1:

  Написать функцию которая выводит массив double чисел на экран. Параметры функции это сам массив и его размер.
  Вызвать эту функцию из main.

_______________________________________________________________________________________________________________________*/


void printDouble(double arr[], int SIZE)
{
    for (size_t i = 0; i < SIZE; i++)
    {
        cout << fixed << setprecision(2) << arr[i] << " ";
    }

    cout << endl;
}


/*_______________________________________________________________________________________________________________________

    Эта функция выводит целочисленный массив.
_______________________________________________________________________________________________________________________*/


void printArray(int arr[], int SIZE)
{
    for (size_t i = 0; i < SIZE; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

/*_______________________________________________________________________________________________________________________

    TASK 2:

    Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0. Выводить на экран массив до изменений и после.

_______________________________________________________________________________________________________________________*/


void boolSwapAndPrint(int arr[], int SIZE)
{
    for (size_t i = 0; i < SIZE; i++)
    {
        if (arr[i] == 0)
        {
            arr[i] += 1;
        }
        else
        {
            arr[i] -= 1;
        }
    }

    printArray(arr, SIZE);
    cout << endl;
}

/*_______________________________________________________________________________________________________________________

    TASK 3:

    Задать пустой целочисленный массив размером 8. Написать функцию, которая с помощью цикла заполнит его значениями:
    1 4 7 10 13 16 19 22. Вывести массив на экран.

_______________________________________________________________________________________________________________________*/


void printInit(int arr[], int SIZE)
{
    int filler = 1;
    for (size_t i = 0; i < SIZE; i++)
    {
        arr[i] = filler;
        filler += 3;
    }

    printArray(arr, SIZE);
    cout << endl;
}

/*_______________________________________________________________________________________________________________________

    TASK 4:

    * Написать функцию, которой на вход подаётся одномерный массив и число n (может быть положительным, или отрицательным),
    при этом метод должен циклически сместить все элементы массива на n позиций.

_______________________________________________________________________________________________________________________*/


void shiftArray(int arr[], int SIZE, int n)
{
    if (n < 0)
    {
        n *= -1;
        for (size_t i = 0; i < n; i++)
        {
            int temp = arr[0];
            for (size_t j = 0; j < SIZE; j++)
            {
                arr[j] = arr[j + 1];
            }
            arr[SIZE - 1] = temp;
        }
        printArray(arr, SIZE);
        cout << endl;
    }

    else if (n > 0)
    {
        for (size_t i = 0; i < n; i++)
        {
            int temp = arr[SIZE - 1];
            for (size_t j = SIZE - 1; j > 0; j--)
            {
                arr[j] = arr[j - 1];
            }
            arr[0] = temp;
        }
        printArray(arr, SIZE);
        cout << endl;
    }

    else if (n == 0)
    {
        printArray(arr, SIZE);
        cout << endl;
    }

}

/*_______________________________________________________________________________________________________________________

    TASK 5:

    ** Написать функцию, которой передается не пустой одномерный целочисленный массив, она должна вернуть истину
    если в массиве есть место, в котором сумма левой и правой части массива равны. Примеры:
    checkBalance([1, 1, 1, || 2, 1]) ? true, checkBalance ([2, 1, 1, 2, 1]) ? false,
    checkBalance ([10, || 1, 2, 3, 4]) ? true.
    Абстрактная граница показана символами ||, эти символы в массив не входят.

_______________________________________________________________________________________________________________________*/


void balanceCheck(int arr[], int SIZE)
{
    int sum = 0, sum2 = 0, check;

    for (size_t i = 0; i < SIZE; i++)
    {
        sum += arr[i];
    }

    check = sum / 2;

    if (sum % 2 == 0)
    {
        for (size_t j = 0; j < SIZE; j++)
        {
            sum2 += arr[j];
            if (sum2 == check)
                break;
        }

        if (sum - sum2 == check)
            cout << "true" << endl;
        else
            cout << "false" << endl;
    }
    if (sum % 2 != 0)
        cout << "false" << endl;

    cout << endl;
}




int main()
{
    setlocale(LC_ALL, "Russian");


    /*_______________________________________________________________________________________________________________________

        TASK 1
    _______________________________________________________________________________________________________________________*/

    const int SIZE = 6;

    double arr[SIZE] = { 1.02, 1.33, 1.57, 2.08, 2.32, 2.56 };

    printDouble(arr, SIZE);
    cout << endl;

    /*_______________________________________________________________________________________________________________________

        TASK 2
    _______________________________________________________________________________________________________________________*/


    const int B_SIZE = 8;

    int bool_arr[B_SIZE] = { 0, 0, 1, 0, 1, 1, 0, 1 };

    printArray(bool_arr, B_SIZE);
    cout << endl;

    boolSwapAndPrint(bool_arr, B_SIZE);

    /*_______________________________________________________________________________________________________________________

        TASK 3
    _______________________________________________________________________________________________________________________*/

    int newArr[B_SIZE];

    printInit(newArr, B_SIZE);

    /*_______________________________________________________________________________________________________________________

        TASK 4
    _______________________________________________________________________________________________________________________*/

    const int SH_SIZE = 10;

    int shifter[SH_SIZE] = { 22, 33, 44, 55, 66, 77, 88, 11, 56, 43 };

    printArray(shifter, SH_SIZE);
    cout << endl;

    shiftArray(shifter, SH_SIZE, -4);

    /*_______________________________________________________________________________________________________________________

         TASK 5
    _______________________________________________________________________________________________________________________*/


    const int CH_SIZE = 6;

    int checkBalance[CH_SIZE] = { 4, 6, 2, 2, 2, 8 };


    balanceCheck(checkBalance,CH_SIZE);







    return 0;

};